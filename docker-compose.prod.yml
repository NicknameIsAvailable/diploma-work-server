version: '3.9'

services:
  postgres:
    image: postgres:15-alpine
    container_name: metrostroy-postgres
    restart: unless-stopped
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: --encoding=UTF-8 --lc-collate=ru_RU.UTF-8 --lc-ctype=ru_RU.UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d
    networks:
      - metrostroy-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  app:
    build:
      context: .
      dockerfile: Dockerfile.prod
    image: metrostroy-schedule-server:latest
    container_name: metrostroy-app
    restart: unless-stopped
    ports:
      - '${APP_PORT:-8000}:8000'
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
      CLIENT_URL: ${CLIENT_URL}
    volumes:
      # Persistent storage для загруженных файлов
      - uploads_data:/app/uploads
      - excel_dumps_data:/app/excel-dumps
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - metrostroy-network
    healthcheck:
      test:
        [
          'CMD',
          'wget',
          '--no-verbose',
          '--tries=1',
          '--spider',
          'http://localhost:8000/api',
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Nginx для проксирования (опционально)
  nginx:
    image: nginx:alpine
    container_name: metrostroy-nginx
    restart: unless-stopped
    ports:
      - '${NGINX_PORT:-80}:80'
      - '${NGINX_SSL_PORT:-443}:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      app:
        condition: service_healthy
    networks:
      - metrostroy-network

volumes:
  postgres_data:
  uploads_data:
  excel_dumps_data:

networks:
  metrostroy-network:
    driver: bridge
